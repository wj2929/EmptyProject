<#@ template debug="true" hostspecific="True" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="EnvDTE" #>
<#@ Import Namespace="System.Diagnostics" #>


//1.	Write() 和WriteLine() 方法
// 输出文本：文本块方式
<#
	var stanrdStr = "// 输出文本：标准控制块方式";
    this.WriteLine(stanrdStr);	
#>
<#
	var expressionStr = "// 输出文本：表达式块方式";	
#>
<#=expressionStr#>


//2.	输出文本缩进设置
<#
	 // System.Reflection.Assembly.GetExecutingAssembly()
	this.PushIndent("//");
    this.WriteLine("line1");
    this.PushIndent("《格式1》");
    this.WriteLine("line2");
    this.PushIndent("《格式2》");
    this.WriteLine("line3");   

    this.PopIndent();  // 去掉格式2
    this.WriteLine("line4");
    this.ClearIndent();
#>

//3.	错误报告
<#
	this.Error("Error");
    this.Warning("Warning");
#>

//4.	显示错误消息
<#
  string message = "test message";
  this.Host.LogErrors(new System.CodeDom.Compiler.CompilerErrorCollection() 
    { new System.CodeDom.Compiler.CompilerError(
       this.Host.TemplateFile, // 编译器遇到错误时正在编译的文件的文件名。
       3, 3, "3",   // 错误源所在的行。错误源所在的列。错误的错误号。
       message) }); // 错误信息文本。
#>

//5.	Visual Studio 中提供的服务（ EnvDTE.dll ）
<#
	IServiceProvider serviceProvider = (IServiceProvider)this.Host;
    EnvDTE.DTE dte = (EnvDTE.DTE)serviceProvider.GetService(typeof(EnvDTE.DTE));   
    //dte.Solution.SaveAs("C:\\backup_Solution");
#>






