<#@ template  language="C#"	debug="true" hostspecific="True"#>
<#@ output extension=".cs" #>
<#@ include file="$(SolutionDir)lib\T4\Reference.ttinclude"  #>
<#@include file="$(SolutionDir)lib\T4\MultipleOutputHelper.ttinclude"#>
<#@ assembly name="$(SolutionDir)EmptyProject.Models\bin\Debug\EmptyProject.Models.dll" #>
<#@ import namespace="EmptyProject.Models" #>
 <# 
	var manager = Manager.Create(Host, GenerationEnvironment);  
	EmptyProject.Models.EmptyProjectDataClassesDataContext db = new EmptyProject.Models.EmptyProjectDataClassesDataContext();
	var tables = from t in db.Mapping.GetTables()
			orderby t.TableName
			select t;
	foreach (var table in tables)
	{
       var className = table.TableName.Replace("dbo.","").Replace("[","").Replace("]","");
		// 定义输出文件
		string outputFileName = "I" + className+"Service.cs";
		if(File.Exists(Path.Combine(Directory.GetParent(Path.GetDirectoryName(Host.TemplateFile)).FullName,outputFileName)))continue;
		manager.StartNewFile(outputFileName);
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using EmptyProject.Domain;
using System.Collections;
using BaseCommon.Core.Page;

namespace EmptyProject.DomainService.Interface
{
    public interface I<#= className #>Service
    {
        #region AutoCode
		/// <summary>
		/// 添加一条信息
		/// </summary>		
		<#= className #>Info Add<#= className #>(<#= className #>Info info);

		/// <summary>
		/// 添加多条信息
		/// </summary>		
		IList<<#= className #>Info> Add<#= className #>s(IList<<#= className #>Info> info);

		/// <summary>
		/// 编辑一条信息
		/// </summary>		
		void Edit<#= className #>(<#= className #>Info info);
		
		/// <summary>
		/// 读取一条数据，如数据不存在，返回null
		/// </summary>		
		<#= className #>Info Single(Guid Id);

		/// <summary>
		/// 删除一条信息
		/// </summary>		
		void Remove(Guid Id);

		/// <summary>
		/// 删除多条信息
		/// </summary>		
		void Removes(Guid[] Ids);

		/// <summary>
		/// 删除多条信息
		/// </summary>		
		void Removes(<#= className #>SearchCondition <#= className #>SearchCondition);

		/// <summary>
		/// 获得所有信息
		/// </summary>		
		IList<<#= className #>Info> All();

        /// <summary>
        /// 检查Id是否存在
        /// </summary>
        /// <param name="Id"></param>
        /// <returns></returns>
        bool IsExist(Guid Id);

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="WasteCertificateSearchCondition"></param>
        /// <param name="PageSize"></param>
        /// <param name="PageNum"></param>
        /// <returns></returns>
        ReturnPaging<<#= className #>Info> Get<#= className #>Paging(<#= className #>SearchCondition <#= className #>SearchCondition, int PageSize = 20, int PageNum = 1);
        
        /// <summary>
        /// 统计
        /// </summary>
        /// <param name="WasteCertificateSearchCondition"></param>
        /// <returns></returns>
        int Count(<#= className #>SearchCondition <#= className #>SearchCondition);        

        /// <summary>
        /// 获取列表
        /// </summary>
        /// <param name="WasteCertificateSearchCondition"></param>
        /// <param name="PageSize"></param>
        /// <param name="PageNum"></param>
        /// <returns></returns>
        IList<<#= className #>Info> GetList(<#= className #>SearchCondition <#= className #>SearchCondition, int PageSize = int.MaxValue, int PageNum = 1);
		#endregion
	}
}
<#
			   // 结束输出文件
			   manager.EndBlock();
	}
	   // 执行编译
	   manager.Process(true); 
	#>
