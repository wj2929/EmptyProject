<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

    <alias alias="IUnitOfWork" type="BC.DDD.IUnitOfWork,BC.DDD"/>
    <alias alias="IDbContextFactory" type="BC.DDD.EntityFramework.IDbContextFactory,BC.DDD.EntityFramework"/>

    <!--日志-->
    <alias alias="ExceptionInterceptor" type="BC.DDD.Logging.ExceptionInterceptor,BC.DDD"/>
    <alias alias="ILogWrite" type="BC.DDD.Logging.ILogWrite,BC.DDD"/>
    <alias alias="IConfigAccessHelper`1" type="BC.Core.IConfigAccessHelper`1,BC.Core"/>
    <alias alias="LocalConfigurationAccessHelper`1" type="BC.Core.LocalConfigurationAccessHelper`1,BC.Core"/>

    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension,Microsoft.Practices.Unity.Interception.Configuration" />

    <container name="Default">
      <extension type="Interception"/>

      <register type="BC.Core.ITextTransferEngine,BC.Core" mapTo="BC.Core.TextTransferEngine,BC.Core">
        <lifetime type="singleton" />
      </register>

      <!--IIOAccess-->
      <register type="BC.Core.IIOAccess,BC.Core" mapTo="BC.Core.DefaultIOAccess,BC.Core">
        <lifetime type="singleton" />
      </register>

      <!--IServiceBus-->
      <!--<register type="BC.DDD.ServiceBus.IServiceBus,BC.DDD" mapTo="BC.ServiceBus.MassTransit,BC.ServiceBus.MassTransit">
        <lifetime type="singleton" />
      </register>-->

      <!--IObjectMapper-->
      <register type="BC.DDD.ObjectMapper.IObjectMapper,BC.DDD" mapTo="BC.AutoMapper.AutoMapperObjectMapper,BC.AutoMapper">
        <lifetime type="singleton" />
      </register>

      <register type="IInterceptionBehavior" mapTo="ExceptionInterceptor" name="ExceptionLog">
        <lifetime type="singleton"/>
      </register>

      <register type="IDbContextFactory" mapTo="SC.Store.Models.DatabaseFactory,SC.Store">
        <lifetime type="Microsoft.Practices.Unity.PerRequestLifetimeManager,Microsoft.Practices.Unity.Mvc" />
      </register>

      <register type="IUnitOfWork" mapTo="BC.DDD.EntityFramework.UnitOfWork,BC.DDD.EntityFramework">
        <lifetime type="Microsoft.Practices.Unity.PerRequestLifetimeManager,Microsoft.Practices.Unity.Mvc" />
      </register>

			<!--Store 开始-->
			<register type="SC.Store.Interface.IClassStore,SC.Store.Interface" mapTo="SC.Store.ClassStore,SC.Store"/>
			<register type="SC.Store.Interface.IClassRoomStore,SC.Store.Interface" mapTo="SC.Store.ClassRoomStore,SC.Store"/>
			<register type="SC.Store.Interface.ICourseStore,SC.Store.Interface" mapTo="SC.Store.CourseStore,SC.Store"/>
			<register type="SC.Store.Interface.IGradeStore,SC.Store.Interface" mapTo="SC.Store.GradeStore,SC.Store"/>
			<register type="SC.Store.Interface.IGradeGroupStore,SC.Store.Interface" mapTo="SC.Store.GradeGroupStore,SC.Store"/>
			<register type="SC.Store.Interface.IOptionalCourseStore,SC.Store.Interface" mapTo="SC.Store.OptionalCourseStore,SC.Store"/>
			<register type="SC.Store.Interface.IOrganizationStore,SC.Store.Interface" mapTo="SC.Store.OrganizationStore,SC.Store"/>
			<register type="SC.Store.Interface.ISCPlanStore,SC.Store.Interface" mapTo="SC.Store.SCPlanStore,SC.Store"/>
			<register type="SC.Store.Interface.ISCRuleStore,SC.Store.Interface" mapTo="SC.Store.SCRuleStore,SC.Store"/>
			<register type="SC.Store.Interface.IStudentStore,SC.Store.Interface" mapTo="SC.Store.StudentStore,SC.Store"/>
			<register type="SC.Store.Interface.IOptionalCourseWillingStudentStore,SC.Store.Interface" mapTo="SC.Store.OptionalCourseWillingStudentStore,SC.Store"/>
			<register type="SC.Store.Interface.ITeacherStore,SC.Store.Interface" mapTo="SC.Store.TeacherStore,SC.Store"/>
			<register type="SC.Store.Interface.ITermStore,SC.Store.Interface" mapTo="SC.Store.TermStore,SC.Store"/>
			<!--Store 结束-->

      <!--Service 开始-->
      <!--<register type="SC.DomainService.Interface.ISCPlanDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.SCPlanDomainService,SC.DomainService"/>-->
			<register type="SC.DomainService.Interface.IClassDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.ClassDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.IClassRoomDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.ClassRoomDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.ICourseDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.CourseDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.IGradeDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.GradeDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.IGradeGroupDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.GradeGroupDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.IOptionalCourseDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.OptionalCourseDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.IOrganizationDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.OrganizationDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.ISCPlanDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.SCPlanDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.ISCRuleDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.SCRuleDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.IStudentDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.StudentDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.IOptionalCourseWillingStudentDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.OptionalCourseWillingStudentDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.ITeacherDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.TeacherDomainService,SC.DomainService"/>
			<register type="SC.DomainService.Interface.ITermDomainService,SC.DomainService.Interface" mapTo="SC.DomainService.TermDomainService,SC.DomainService"/>
      <!--Service 结束-->
    </container>
  </unity>
</configuration>